FROM resin/%%RESIN_MACHINE_NAME%%-fedora-node:slim

# Install dnf dependencies
RUN dnf install --verbose -yq \
  make \
  automake \
  gcc \
  gcc-c++ \
  kernel-devel \
  clang \
  wget \
  xorg-x11-xinit \
  xorg-x11-drv-evdev \
  xorg-x11-drv-fbdev \
  xorg-x11-drv-libinput \
  xorg-x11-drv-armsoc \
  xorg-x11-drv-fbturbo \
  xorg-x11-server-utils \
  xorg-x11-font-utils \
  xorg-x11-drivers \
  xorg-x11-drv-synaptics \
  libXScrnSaver \
  mesa-dri-drivers \
  alsa-lib \
  dbus-devel \
  dbus-libs \
  gtk2-devel \
  gnome-keyring \
  GConf2-devel \
  nss-devel \
  fluxbox \
  libsmbclient \
  fbset \
  expat-devel && dnf clean all

# Set Xorg and FLUXBOX preferences
RUN mkdir ~/.fluxbox
RUN echo "xset s off" > ~/.fluxbox/startup && echo "xserver-command=X -s 0 dpms" >> ~/.fluxbox/startup
RUN echo "#!/bin/bash" > /etc/X11/xinit/xserverrc \
  && echo "" >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Set npm
RUN npm config set unsafe-perm true

# Save source folder
RUN printf "%s\n" "${PWD##}" > SOURCEFOLDER

# Move to app dir
WORKDIR /usr/src/app

# Move package.json to filesystem
COPY "$SOURCEFOLDER/app/package.json" ./

# NPM i app
RUN JOBS=MAX npm i --production

# Move app to filesystem
COPY "$SOURCEFOLDER/app" ./

## uncomment if you want systemd
ENV INITSYSTEM on

# Start app
CMD ["bash", "/usr/src/app/start.sh"]
